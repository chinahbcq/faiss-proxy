// Code generated by protoc-gen-go. DO NOT EDIT.
// source: faiss_def.proto

/*
Package faiss_server is a generated protocol buffer package.

It is generated from these files:
	faiss_def.proto

It has these top-level messages:
	PingRequest
	PingResponse
	DbNewRequest
	DbDelRequest
	EmptyResponse
	DbListRequest
	DbListResponse
	HGetDelRequest
	HGetResponse
	HSetRequest
	HSetResponse
	HSearchRequest
	HSearchResponse
*/
package faiss_server

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HSearchRequest_DistanceType int32

const (
	HSearchRequest_Euclid HSearchRequest_DistanceType = 0
	HSearchRequest_Cosine HSearchRequest_DistanceType = 1
)

var HSearchRequest_DistanceType_name = map[int32]string{
	0: "Euclid",
	1: "Cosine",
}
var HSearchRequest_DistanceType_value = map[string]int32{
	"Euclid": 0,
	"Cosine": 1,
}

func (x HSearchRequest_DistanceType) String() string {
	return proto.EnumName(HSearchRequest_DistanceType_name, int32(x))
}
func (HSearchRequest_DistanceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{11, 0}
}

// ping请求接口
type PingRequest struct {
	Payload string `protobuf:"bytes,1,opt,name=payload" json:"payload,omitempty"`
}

func (m *PingRequest) Reset()                    { *m = PingRequest{} }
func (m *PingRequest) String() string            { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()               {}
func (*PingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PingRequest) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

// ping返回报文
type PingResponse struct {
	Payload string `protobuf:"bytes,1,opt,name=payload" json:"payload,omitempty"`
}

func (m *PingResponse) Reset()                    { *m = PingResponse{} }
func (m *PingResponse) String() string            { return proto.CompactTextString(m) }
func (*PingResponse) ProtoMessage()               {}
func (*PingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PingResponse) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

// 创建db请求
type DbNewRequest struct {
	DbName    string `protobuf:"bytes,1,opt,name=db_name,json=dbName" json:"db_name,omitempty"`
	MaxSize   uint64 `protobuf:"varint,2,opt,name=max_size,json=maxSize" json:"max_size,omitempty"`
	Model     string `protobuf:"bytes,3,opt,name=model" json:"model,omitempty"`
	RequestId string `protobuf:"bytes,4,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
}

func (m *DbNewRequest) Reset()                    { *m = DbNewRequest{} }
func (m *DbNewRequest) String() string            { return proto.CompactTextString(m) }
func (*DbNewRequest) ProtoMessage()               {}
func (*DbNewRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *DbNewRequest) GetDbName() string {
	if m != nil {
		return m.DbName
	}
	return ""
}

func (m *DbNewRequest) GetMaxSize() uint64 {
	if m != nil {
		return m.MaxSize
	}
	return 0
}

func (m *DbNewRequest) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *DbNewRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

// 删除db请求
type DbDelRequest struct {
	DbName    string `protobuf:"bytes,1,opt,name=db_name,json=dbName" json:"db_name,omitempty"`
	RequestId string `protobuf:"bytes,2,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
}

func (m *DbDelRequest) Reset()                    { *m = DbDelRequest{} }
func (m *DbDelRequest) String() string            { return proto.CompactTextString(m) }
func (*DbDelRequest) ProtoMessage()               {}
func (*DbDelRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *DbDelRequest) GetDbName() string {
	if m != nil {
		return m.DbName
	}
	return ""
}

func (m *DbDelRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

// 默认返回
type EmptyResponse struct {
	ErrorCode int64  `protobuf:"varint,1,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	ErrorMsg  string `protobuf:"bytes,2,opt,name=error_msg,json=errorMsg" json:"error_msg,omitempty"`
	RequestId string `protobuf:"bytes,3,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
}

func (m *EmptyResponse) Reset()                    { *m = EmptyResponse{} }
func (m *EmptyResponse) String() string            { return proto.CompactTextString(m) }
func (*EmptyResponse) ProtoMessage()               {}
func (*EmptyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *EmptyResponse) GetErrorCode() int64 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *EmptyResponse) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

func (m *EmptyResponse) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

// 查询db列表请求
type DbListRequest struct {
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
}

func (m *DbListRequest) Reset()                    { *m = DbListRequest{} }
func (m *DbListRequest) String() string            { return proto.CompactTextString(m) }
func (*DbListRequest) ProtoMessage()               {}
func (*DbListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *DbListRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

// 查询db列表返回结果
type DbListResponse struct {
	DbStatus  []*DbListResponse_DbStatus `protobuf:"bytes,2,rep,name=db_status,json=dbStatus" json:"db_status,omitempty"`
	ErrorCode int64                      `protobuf:"varint,3,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	ErrorMsg  string                     `protobuf:"bytes,4,opt,name=error_msg,json=errorMsg" json:"error_msg,omitempty"`
	RequestId string                     `protobuf:"bytes,5,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
}

func (m *DbListResponse) Reset()                    { *m = DbListResponse{} }
func (m *DbListResponse) String() string            { return proto.CompactTextString(m) }
func (*DbListResponse) ProtoMessage()               {}
func (*DbListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *DbListResponse) GetDbStatus() []*DbListResponse_DbStatus {
	if m != nil {
		return m.DbStatus
	}
	return nil
}

func (m *DbListResponse) GetErrorCode() int64 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *DbListResponse) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

func (m *DbListResponse) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

type DbListResponse_DbStatus struct {
	Name             string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Ntotal           uint64 `protobuf:"varint,2,opt,name=ntotal" json:"ntotal,omitempty"`
	MaxSize          uint64 `protobuf:"varint,3,opt,name=max_size,json=maxSize" json:"max_size,omitempty"`
	CurrMaxId        uint64 `protobuf:"varint,4,opt,name=curr_max_id,json=currMaxId" json:"curr_max_id,omitempty"`
	CurrPersistMaxId uint64 `protobuf:"varint,5,opt,name=curr_persist_max_id,json=currPersistMaxId" json:"curr_persist_max_id,omitempty"`
	PersistPath      string `protobuf:"bytes,6,opt,name=persist_path,json=persistPath" json:"persist_path,omitempty"`
	RawDataPath      string `protobuf:"bytes,7,opt,name=raw_data_path,json=rawDataPath" json:"raw_data_path,omitempty"`
	Dimension        uint64 `protobuf:"varint,8,opt,name=dimension" json:"dimension,omitempty"`
	Model            string `protobuf:"bytes,9,opt,name=model" json:"model,omitempty"`
	BlackListLen     uint64 `protobuf:"varint,10,opt,name=black_list_len,json=blackListLen" json:"black_list_len,omitempty"`
}

func (m *DbListResponse_DbStatus) Reset()                    { *m = DbListResponse_DbStatus{} }
func (m *DbListResponse_DbStatus) String() string            { return proto.CompactTextString(m) }
func (*DbListResponse_DbStatus) ProtoMessage()               {}
func (*DbListResponse_DbStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6, 0} }

func (m *DbListResponse_DbStatus) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DbListResponse_DbStatus) GetNtotal() uint64 {
	if m != nil {
		return m.Ntotal
	}
	return 0
}

func (m *DbListResponse_DbStatus) GetMaxSize() uint64 {
	if m != nil {
		return m.MaxSize
	}
	return 0
}

func (m *DbListResponse_DbStatus) GetCurrMaxId() uint64 {
	if m != nil {
		return m.CurrMaxId
	}
	return 0
}

func (m *DbListResponse_DbStatus) GetCurrPersistMaxId() uint64 {
	if m != nil {
		return m.CurrPersistMaxId
	}
	return 0
}

func (m *DbListResponse_DbStatus) GetPersistPath() string {
	if m != nil {
		return m.PersistPath
	}
	return ""
}

func (m *DbListResponse_DbStatus) GetRawDataPath() string {
	if m != nil {
		return m.RawDataPath
	}
	return ""
}

func (m *DbListResponse_DbStatus) GetDimension() uint64 {
	if m != nil {
		return m.Dimension
	}
	return 0
}

func (m *DbListResponse_DbStatus) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *DbListResponse_DbStatus) GetBlackListLen() uint64 {
	if m != nil {
		return m.BlackListLen
	}
	return 0
}

// 获取或者删除一条特征请求
type HGetDelRequest struct {
	DbName    string `protobuf:"bytes,1,opt,name=db_name,json=dbName" json:"db_name,omitempty"`
	Id        uint64 `protobuf:"varint,3,opt,name=id" json:"id,omitempty"`
	RequestId string `protobuf:"bytes,4,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
}

func (m *HGetDelRequest) Reset()                    { *m = HGetDelRequest{} }
func (m *HGetDelRequest) String() string            { return proto.CompactTextString(m) }
func (*HGetDelRequest) ProtoMessage()               {}
func (*HGetDelRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *HGetDelRequest) GetDbName() string {
	if m != nil {
		return m.DbName
	}
	return ""
}

func (m *HGetDelRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *HGetDelRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

// 获取一个特征的返回
type HGetResponse struct {
	Feature   []byte `protobuf:"bytes,2,opt,name=feature,proto3" json:"feature,omitempty"`
	Dimension uint64 `protobuf:"varint,5,opt,name=dimension" json:"dimension,omitempty"`
	RequestId string `protobuf:"bytes,6,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	ErrorCode int64  `protobuf:"varint,7,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	ErrorMsg  string `protobuf:"bytes,8,opt,name=error_msg,json=errorMsg" json:"error_msg,omitempty"`
}

func (m *HGetResponse) Reset()                    { *m = HGetResponse{} }
func (m *HGetResponse) String() string            { return proto.CompactTextString(m) }
func (*HGetResponse) ProtoMessage()               {}
func (*HGetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *HGetResponse) GetFeature() []byte {
	if m != nil {
		return m.Feature
	}
	return nil
}

func (m *HGetResponse) GetDimension() uint64 {
	if m != nil {
		return m.Dimension
	}
	return 0
}

func (m *HGetResponse) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *HGetResponse) GetErrorCode() int64 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *HGetResponse) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

// 添加一条特征的请求
type HSetRequest struct {
	DbName    string `protobuf:"bytes,1,opt,name=db_name,json=dbName" json:"db_name,omitempty"`
	Feature   []byte `protobuf:"bytes,3,opt,name=feature,proto3" json:"feature,omitempty"`
	RequestId string `protobuf:"bytes,7,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
}

func (m *HSetRequest) Reset()                    { *m = HSetRequest{} }
func (m *HSetRequest) String() string            { return proto.CompactTextString(m) }
func (*HSetRequest) ProtoMessage()               {}
func (*HSetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *HSetRequest) GetDbName() string {
	if m != nil {
		return m.DbName
	}
	return ""
}

func (m *HSetRequest) GetFeature() []byte {
	if m != nil {
		return m.Feature
	}
	return nil
}

func (m *HSetRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

// 添加一条特征的返回
type HSetResponse struct {
	Id        uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	RequestId string `protobuf:"bytes,2,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	ErrorCode int64  `protobuf:"varint,3,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	ErrorMsg  string `protobuf:"bytes,4,opt,name=error_msg,json=errorMsg" json:"error_msg,omitempty"`
}

func (m *HSetResponse) Reset()                    { *m = HSetResponse{} }
func (m *HSetResponse) String() string            { return proto.CompactTextString(m) }
func (*HSetResponse) ProtoMessage()               {}
func (*HSetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *HSetResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *HSetResponse) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *HSetResponse) GetErrorCode() int64 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *HSetResponse) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

// ANN检索请求
type HSearchRequest struct {
	DbName       string                      `protobuf:"bytes,1,opt,name=db_name,json=dbName" json:"db_name,omitempty"`
	Feature      []byte                      `protobuf:"bytes,2,opt,name=feature,proto3" json:"feature,omitempty"`
	TopK         uint64                      `protobuf:"varint,3,opt,name=top_k,json=topK" json:"top_k,omitempty"`
	DistanceType HSearchRequest_DistanceType `protobuf:"varint,9,opt,name=distance_type,json=distanceType,enum=faiss_server.HSearchRequest_DistanceType" json:"distance_type,omitempty"`
	RequestId    string                      `protobuf:"bytes,10,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
}

func (m *HSearchRequest) Reset()                    { *m = HSearchRequest{} }
func (m *HSearchRequest) String() string            { return proto.CompactTextString(m) }
func (*HSearchRequest) ProtoMessage()               {}
func (*HSearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *HSearchRequest) GetDbName() string {
	if m != nil {
		return m.DbName
	}
	return ""
}

func (m *HSearchRequest) GetFeature() []byte {
	if m != nil {
		return m.Feature
	}
	return nil
}

func (m *HSearchRequest) GetTopK() uint64 {
	if m != nil {
		return m.TopK
	}
	return 0
}

func (m *HSearchRequest) GetDistanceType() HSearchRequest_DistanceType {
	if m != nil {
		return m.DistanceType
	}
	return HSearchRequest_Euclid
}

func (m *HSearchRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

// ANN 检索返回
type HSearchResponse struct {
	Results   []*HSearchResponse_Result `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
	RequestId string                    `protobuf:"bytes,2,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	ErrorCode int64                     `protobuf:"varint,3,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	ErrorMsg  string                    `protobuf:"bytes,4,opt,name=error_msg,json=errorMsg" json:"error_msg,omitempty"`
}

func (m *HSearchResponse) Reset()                    { *m = HSearchResponse{} }
func (m *HSearchResponse) String() string            { return proto.CompactTextString(m) }
func (*HSearchResponse) ProtoMessage()               {}
func (*HSearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *HSearchResponse) GetResults() []*HSearchResponse_Result {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *HSearchResponse) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *HSearchResponse) GetErrorCode() int64 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *HSearchResponse) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

type HSearchResponse_Result struct {
	Score float32 `protobuf:"fixed32,2,opt,name=score" json:"score,omitempty"`
	Id    uint64  `protobuf:"varint,3,opt,name=id" json:"id,omitempty"`
}

func (m *HSearchResponse_Result) Reset()                    { *m = HSearchResponse_Result{} }
func (m *HSearchResponse_Result) String() string            { return proto.CompactTextString(m) }
func (*HSearchResponse_Result) ProtoMessage()               {}
func (*HSearchResponse_Result) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12, 0} }

func (m *HSearchResponse_Result) GetScore() float32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *HSearchResponse_Result) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*PingRequest)(nil), "faiss_server.PingRequest")
	proto.RegisterType((*PingResponse)(nil), "faiss_server.PingResponse")
	proto.RegisterType((*DbNewRequest)(nil), "faiss_server.DbNewRequest")
	proto.RegisterType((*DbDelRequest)(nil), "faiss_server.DbDelRequest")
	proto.RegisterType((*EmptyResponse)(nil), "faiss_server.EmptyResponse")
	proto.RegisterType((*DbListRequest)(nil), "faiss_server.DbListRequest")
	proto.RegisterType((*DbListResponse)(nil), "faiss_server.DbListResponse")
	proto.RegisterType((*DbListResponse_DbStatus)(nil), "faiss_server.DbListResponse.DbStatus")
	proto.RegisterType((*HGetDelRequest)(nil), "faiss_server.HGetDelRequest")
	proto.RegisterType((*HGetResponse)(nil), "faiss_server.HGetResponse")
	proto.RegisterType((*HSetRequest)(nil), "faiss_server.HSetRequest")
	proto.RegisterType((*HSetResponse)(nil), "faiss_server.HSetResponse")
	proto.RegisterType((*HSearchRequest)(nil), "faiss_server.HSearchRequest")
	proto.RegisterType((*HSearchResponse)(nil), "faiss_server.HSearchResponse")
	proto.RegisterType((*HSearchResponse_Result)(nil), "faiss_server.HSearchResponse.Result")
	proto.RegisterEnum("faiss_server.HSearchRequest_DistanceType", HSearchRequest_DistanceType_name, HSearchRequest_DistanceType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for FaissService service

type FaissServiceClient interface {
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
	DbNew(ctx context.Context, in *DbNewRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	DbDel(ctx context.Context, in *DbDelRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	DbList(ctx context.Context, in *DbListRequest, opts ...grpc.CallOption) (*DbListResponse, error)
	HSet(ctx context.Context, in *HSetRequest, opts ...grpc.CallOption) (*HSetResponse, error)
	HDel(ctx context.Context, in *HGetDelRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	HGet(ctx context.Context, in *HGetDelRequest, opts ...grpc.CallOption) (*HGetResponse, error)
	HSearch(ctx context.Context, in *HSearchRequest, opts ...grpc.CallOption) (*HSearchResponse, error)
}

type faissServiceClient struct {
	cc *grpc.ClientConn
}

func NewFaissServiceClient(cc *grpc.ClientConn) FaissServiceClient {
	return &faissServiceClient{cc}
}

func (c *faissServiceClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := grpc.Invoke(ctx, "/faiss_server.FaissService/Ping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *faissServiceClient) DbNew(ctx context.Context, in *DbNewRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := grpc.Invoke(ctx, "/faiss_server.FaissService/DbNew", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *faissServiceClient) DbDel(ctx context.Context, in *DbDelRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := grpc.Invoke(ctx, "/faiss_server.FaissService/DbDel", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *faissServiceClient) DbList(ctx context.Context, in *DbListRequest, opts ...grpc.CallOption) (*DbListResponse, error) {
	out := new(DbListResponse)
	err := grpc.Invoke(ctx, "/faiss_server.FaissService/DbList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *faissServiceClient) HSet(ctx context.Context, in *HSetRequest, opts ...grpc.CallOption) (*HSetResponse, error) {
	out := new(HSetResponse)
	err := grpc.Invoke(ctx, "/faiss_server.FaissService/HSet", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *faissServiceClient) HDel(ctx context.Context, in *HGetDelRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := grpc.Invoke(ctx, "/faiss_server.FaissService/HDel", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *faissServiceClient) HGet(ctx context.Context, in *HGetDelRequest, opts ...grpc.CallOption) (*HGetResponse, error) {
	out := new(HGetResponse)
	err := grpc.Invoke(ctx, "/faiss_server.FaissService/HGet", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *faissServiceClient) HSearch(ctx context.Context, in *HSearchRequest, opts ...grpc.CallOption) (*HSearchResponse, error) {
	out := new(HSearchResponse)
	err := grpc.Invoke(ctx, "/faiss_server.FaissService/HSearch", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for FaissService service

type FaissServiceServer interface {
	Ping(context.Context, *PingRequest) (*PingResponse, error)
	DbNew(context.Context, *DbNewRequest) (*EmptyResponse, error)
	DbDel(context.Context, *DbDelRequest) (*EmptyResponse, error)
	DbList(context.Context, *DbListRequest) (*DbListResponse, error)
	HSet(context.Context, *HSetRequest) (*HSetResponse, error)
	HDel(context.Context, *HGetDelRequest) (*EmptyResponse, error)
	HGet(context.Context, *HGetDelRequest) (*HGetResponse, error)
	HSearch(context.Context, *HSearchRequest) (*HSearchResponse, error)
}

func RegisterFaissServiceServer(s *grpc.Server, srv FaissServiceServer) {
	s.RegisterService(&_FaissService_serviceDesc, srv)
}

func _FaissService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FaissServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/faiss_server.FaissService/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FaissServiceServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FaissService_DbNew_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DbNewRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FaissServiceServer).DbNew(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/faiss_server.FaissService/DbNew",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FaissServiceServer).DbNew(ctx, req.(*DbNewRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FaissService_DbDel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DbDelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FaissServiceServer).DbDel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/faiss_server.FaissService/DbDel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FaissServiceServer).DbDel(ctx, req.(*DbDelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FaissService_DbList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DbListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FaissServiceServer).DbList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/faiss_server.FaissService/DbList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FaissServiceServer).DbList(ctx, req.(*DbListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FaissService_HSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HSetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FaissServiceServer).HSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/faiss_server.FaissService/HSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FaissServiceServer).HSet(ctx, req.(*HSetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FaissService_HDel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HGetDelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FaissServiceServer).HDel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/faiss_server.FaissService/HDel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FaissServiceServer).HDel(ctx, req.(*HGetDelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FaissService_HGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HGetDelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FaissServiceServer).HGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/faiss_server.FaissService/HGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FaissServiceServer).HGet(ctx, req.(*HGetDelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FaissService_HSearch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HSearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FaissServiceServer).HSearch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/faiss_server.FaissService/HSearch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FaissServiceServer).HSearch(ctx, req.(*HSearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FaissService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "faiss_server.FaissService",
	HandlerType: (*FaissServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _FaissService_Ping_Handler,
		},
		{
			MethodName: "DbNew",
			Handler:    _FaissService_DbNew_Handler,
		},
		{
			MethodName: "DbDel",
			Handler:    _FaissService_DbDel_Handler,
		},
		{
			MethodName: "DbList",
			Handler:    _FaissService_DbList_Handler,
		},
		{
			MethodName: "HSet",
			Handler:    _FaissService_HSet_Handler,
		},
		{
			MethodName: "HDel",
			Handler:    _FaissService_HDel_Handler,
		},
		{
			MethodName: "HGet",
			Handler:    _FaissService_HGet_Handler,
		},
		{
			MethodName: "HSearch",
			Handler:    _FaissService_HSearch_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "faiss_def.proto",
}

func init() { proto.RegisterFile("faiss_def.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 955 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x56, 0xcf, 0x72, 0xdb, 0x44,
	0x18, 0x47, 0xb6, 0xfc, 0xef, 0xb3, 0xe2, 0x86, 0x0d, 0x14, 0xc5, 0x49, 0x98, 0xa0, 0x29, 0x10,
	0x3a, 0x83, 0x0d, 0xe1, 0xd6, 0x03, 0x07, 0xea, 0x96, 0x74, 0x68, 0x33, 0x19, 0x99, 0x43, 0x66,
	0x80, 0xd1, 0xac, 0xbc, 0x1b, 0x5b, 0x54, 0xd6, 0x0a, 0xed, 0xba, 0x8e, 0x7b, 0x64, 0x78, 0x03,
	0x9e, 0x80, 0x47, 0xe1, 0x19, 0xb8, 0x72, 0xe4, 0xce, 0x81, 0x17, 0x60, 0xb4, 0x2b, 0x25, 0xda,
	0x8d, 0xeb, 0xb4, 0xcc, 0x70, 0xd3, 0xee, 0xfe, 0xf6, 0xf7, 0xfb, 0xbe, 0x6f, 0xbf, 0x3f, 0x82,
	0x3b, 0x17, 0x38, 0xe2, 0x3c, 0x20, 0xf4, 0x62, 0x90, 0x66, 0x4c, 0x30, 0xe4, 0xa8, 0x0d, 0x4e,
	0xb3, 0x17, 0x34, 0xeb, 0xef, 0x4f, 0x19, 0x9b, 0xc6, 0x74, 0x88, 0xd3, 0x68, 0x88, 0x93, 0x84,
	0x09, 0x2c, 0x22, 0x96, 0x70, 0x85, 0xf5, 0x3e, 0x86, 0xee, 0x59, 0x94, 0x4c, 0x7d, 0xfa, 0xd3,
	0x82, 0x72, 0x81, 0x5c, 0x68, 0xa5, 0x78, 0x15, 0x33, 0x4c, 0x5c, 0xeb, 0xd0, 0x3a, 0xea, 0xf8,
	0xe5, 0xd2, 0x3b, 0x02, 0x47, 0x01, 0x79, 0xca, 0x12, 0x4e, 0x37, 0x20, 0x97, 0xe0, 0x8c, 0xc2,
	0x53, 0xba, 0x2c, 0x39, 0xdf, 0x83, 0x16, 0x09, 0x83, 0x04, 0xcf, 0x69, 0x81, 0x6c, 0x92, 0xf0,
	0x14, 0xcf, 0x29, 0xda, 0x85, 0xf6, 0x1c, 0x5f, 0x06, 0x3c, 0x7a, 0x49, 0xdd, 0xda, 0xa1, 0x75,
	0x64, 0xfb, 0xad, 0x39, 0xbe, 0x1c, 0x47, 0x2f, 0x29, 0x7a, 0x07, 0x1a, 0x73, 0x46, 0x68, 0xec,
	0xd6, 0xe5, 0x0d, 0xb5, 0x40, 0x07, 0x00, 0x99, 0x22, 0x0d, 0x22, 0xe2, 0xda, 0xf2, 0xa8, 0x53,
	0xec, 0x3c, 0x21, 0xde, 0xe3, 0x5c, 0x78, 0x44, 0xe3, 0x5b, 0x85, 0x75, 0x9e, 0x9a, 0xc9, 0xf3,
	0x23, 0x6c, 0x3d, 0x9a, 0xa7, 0x62, 0x75, 0xe5, 0xeb, 0x01, 0x00, 0xcd, 0x32, 0x96, 0x05, 0x13,
	0x46, 0x14, 0x57, 0xdd, 0xef, 0xc8, 0x9d, 0x87, 0x8c, 0x50, 0xb4, 0x07, 0x6a, 0x11, 0xcc, 0xf9,
	0xb4, 0x60, 0x6b, 0xcb, 0x8d, 0x67, 0x7c, 0x6a, 0x68, 0xd5, 0x4d, 0xad, 0x01, 0x6c, 0x8d, 0xc2,
	0xa7, 0x11, 0x17, 0xa5, 0xd1, 0x3a, 0xde, 0x32, 0xf1, 0xff, 0xd4, 0xa1, 0x57, 0x5e, 0x28, 0xac,
	0xfb, 0x0a, 0x3a, 0x24, 0x0c, 0xb8, 0xc0, 0x62, 0xc1, 0xdd, 0xda, 0x61, 0xfd, 0xa8, 0x7b, 0xfc,
	0xe1, 0xa0, 0x9a, 0x02, 0x03, 0xfd, 0xc2, 0x60, 0x14, 0x8e, 0x25, 0xd8, 0x6f, 0x93, 0xe2, 0xcb,
	0xf0, 0xb0, 0xbe, 0xd1, 0x43, 0x7b, 0xa3, 0x87, 0x0d, 0xc3, 0xe2, 0xfe, 0xef, 0x35, 0x68, 0x97,
	0x8a, 0x08, 0x81, 0x5d, 0x79, 0x0f, 0xf9, 0x8d, 0xee, 0x42, 0x33, 0x11, 0x4c, 0xe0, 0xb8, 0x48,
	0x82, 0x62, 0xa5, 0xa5, 0x47, 0x5d, 0x4f, 0x8f, 0xf7, 0xa1, 0x3b, 0x59, 0x64, 0x59, 0x90, 0x9f,
	0x17, 0x99, 0x60, 0xfb, 0x9d, 0x7c, 0xeb, 0x19, 0xbe, 0x7c, 0x42, 0xd0, 0xa7, 0xb0, 0x23, 0xcf,
	0x53, 0x9a, 0xf1, 0x88, 0x8b, 0x12, 0xd7, 0x90, 0xb8, 0xed, 0xfc, 0xe8, 0x4c, 0x9d, 0x28, 0xf8,
	0x07, 0xe0, 0x94, 0xc8, 0x14, 0x8b, 0x99, 0xdb, 0x94, 0xd6, 0x75, 0x8b, 0xbd, 0x33, 0x2c, 0x66,
	0xc8, 0x83, 0xad, 0x0c, 0x2f, 0x03, 0x82, 0x05, 0x56, 0x98, 0x96, 0xc2, 0x64, 0x78, 0x39, 0xc2,
	0x02, 0x4b, 0xcc, 0x3e, 0x74, 0x48, 0x34, 0xa7, 0x09, 0x8f, 0x58, 0xe2, 0xb6, 0x95, 0x4d, 0x57,
	0x1b, 0xd7, 0x29, 0xdd, 0xa9, 0xa6, 0xf4, 0x3d, 0xe8, 0x85, 0x31, 0x9e, 0x3c, 0x0f, 0xe2, 0x5c,
	0x3d, 0xa6, 0x89, 0x0b, 0xf2, 0xa2, 0x23, 0x77, 0xf3, 0x67, 0x7b, 0x4a, 0x13, 0xef, 0x1c, 0x7a,
	0x27, 0x5f, 0x53, 0xf1, 0x3a, 0xb9, 0xdd, 0x83, 0x5a, 0x91, 0x67, 0xb6, 0x5f, 0x8b, 0xc8, 0x6d,
	0x35, 0xf3, 0x9b, 0x05, 0x4e, 0x4e, 0x5d, 0xad, 0xeb, 0x0b, 0x8a, 0xc5, 0x22, 0x53, 0x35, 0xe9,
	0xf8, 0xe5, 0x52, 0x77, 0xaf, 0x61, 0xba, 0xa7, 0xeb, 0x34, 0x0d, 0x1d, 0x23, 0xc1, 0x5a, 0x1b,
	0x13, 0xac, 0xad, 0x27, 0x98, 0x17, 0x40, 0xf7, 0x64, 0x4c, 0xc5, 0xad, 0xae, 0x57, 0x4c, 0xaf,
	0xeb, 0xa6, 0xeb, 0xc6, 0xb5, 0xcc, 0x20, 0xac, 0xc0, 0x51, 0x02, 0x45, 0x0c, 0x54, 0x0c, 0xad,
	0x57, 0xc4, 0xb0, 0xb6, 0xd9, 0xb7, 0x37, 0x2a, 0x1e, 0xef, 0x6f, 0x0b, 0x7a, 0x27, 0x63, 0x8a,
	0xb3, 0xc9, 0xec, 0x4d, 0xfc, 0x33, 0x9e, 0x66, 0x07, 0x1a, 0x82, 0xa5, 0xc1, 0xf3, 0xe2, 0xdd,
	0x6d, 0xc1, 0xd2, 0x6f, 0xd0, 0x29, 0x6c, 0x91, 0x88, 0x0b, 0x9c, 0x4c, 0x68, 0x20, 0x56, 0x29,
	0x95, 0x89, 0xd7, 0x3b, 0xfe, 0x44, 0xef, 0x0d, 0xba, 0xf8, 0x60, 0x54, 0xdc, 0xf8, 0x76, 0x95,
	0x52, 0xdf, 0x21, 0x95, 0x95, 0x11, 0x05, 0x30, 0x83, 0xf8, 0x11, 0x38, 0xd5, 0xcb, 0x08, 0xa0,
	0xf9, 0x68, 0x31, 0x89, 0x23, 0xb2, 0xfd, 0x56, 0xfe, 0xfd, 0x90, 0xf1, 0x28, 0xa1, 0xdb, 0x96,
	0xf7, 0xa7, 0x05, 0x77, 0xae, 0x44, 0x8b, 0x80, 0x7f, 0x09, 0xad, 0x8c, 0xf2, 0x45, 0x2c, 0xb8,
	0x6b, 0xc9, 0x06, 0x76, 0xef, 0x15, 0x46, 0x16, 0x1d, 0xcc, 0x97, 0x60, 0xbf, 0xbc, 0xf4, 0x3f,
	0x3e, 0x50, 0x7f, 0x00, 0x4d, 0xa5, 0x96, 0x17, 0x30, 0x9f, 0xb0, 0x22, 0xf8, 0x35, 0x5f, 0x2d,
	0xcc, 0x7a, 0x3b, 0xfe, 0xa5, 0x09, 0xce, 0xe3, 0xdc, 0xf6, 0x31, 0xcd, 0x5e, 0x44, 0x13, 0x8a,
	0xce, 0xc1, 0xce, 0x07, 0x27, 0xda, 0xd5, 0x5d, 0xaa, 0x4c, 0xdd, 0x7e, 0x7f, 0xdd, 0x91, 0x72,
	0xd5, 0xdb, 0xfd, 0xf9, 0x8f, 0xbf, 0x7e, 0xad, 0xed, 0x78, 0x3d, 0x09, 0x19, 0x7e, 0x3e, 0xf8,
	0x6c, 0x98, 0x46, 0xc9, 0xf4, 0x81, 0x75, 0x1f, 0xfd, 0x00, 0x0d, 0x39, 0x68, 0x51, 0xdf, 0x6c,
	0xf7, 0xd7, 0xd3, 0xb7, 0xbf, 0xa7, 0x9f, 0x69, 0x83, 0xcd, 0xdb, 0x93, 0xe4, 0xef, 0x7a, 0xdb,
	0xd7, 0xe4, 0x24, 0x1c, 0x26, 0x74, 0x79, 0x45, 0x3f, 0xa2, 0xf1, 0x4d, 0xfa, 0xeb, 0x3e, 0xf4,
	0x5f, 0xe8, 0x09, 0x8d, 0x73, 0x7a, 0x0c, 0x4d, 0x35, 0x97, 0xd0, 0xde, 0xfa, 0x69, 0xa5, 0x04,
	0xf6, 0x37, 0x8d, 0x32, 0x6f, 0x5f, 0x2a, 0xdc, 0xf5, 0xde, 0xd6, 0x14, 0xf2, 0x5e, 0x9a, 0x4b,
	0x9c, 0x83, 0x9d, 0xd7, 0xb5, 0x19, 0xfa, 0x4a, 0x33, 0x31, 0x43, 0x5f, 0x6d, 0x03, 0xeb, 0x42,
	0x3f, 0xe3, 0x54, 0x32, 0x7f, 0x0f, 0xf6, 0x49, 0x1e, 0x1a, 0xc3, 0x3a, 0xbd, 0x49, 0x6f, 0x0e,
	0xce, 0x3a, 0xf6, 0xa9, 0x62, 0xff, 0x0e, 0xec, 0x9c, 0xe9, 0x16, 0xf6, 0xfe, 0xcd, 0xd3, 0xd7,
	0x21, 0x27, 0xd0, 0x2a, 0xca, 0xe9, 0x06, 0xbf, 0xd6, 0x0a, 0xfa, 0x07, 0x1b, 0x6b, 0x70, 0x5d,
	0xe8, 0x67, 0x5c, 0x42, 0x1e, 0x58, 0xf7, 0xc3, 0xa6, 0xfc, 0xbd, 0xfc, 0xe2, 0xdf, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x81, 0x77, 0xea, 0x08, 0x9d, 0x0a, 0x00, 0x00,
}
